{
  "name": "Okra",
  "tagline": "Job Scheduler that uses MongoDB as backend",
  "body": "# Okra\r\nA simple and scalable Scheduler that uses MongoDB as backend\r\n\r\n\r\n### Requirements\r\n\r\n* Java 8\r\n* MongoDB\r\n\r\n#### Note\r\nRight now Okra was only one module that requires Spring Data MongoDB to work, but you can send a Pull Request any time creating a new maven module (like okra-spring) that requires only the raw MongoDB Driver.\r\n\r\n### Binaries\r\n\r\n[![](https://jitpack.io/v/fernandonogueira/okra.svg)](https://jitpack.io/#fernandonogueira/okra)\r\n\r\n#### Gradle\r\nbuild.gradle\r\n```groovy\r\n    allprojects {\r\n        repositories {\r\n            ...\r\n            maven { url \"https://jitpack.io\" }\r\n        }\r\n    }\r\n```\r\n\r\n```groovy\r\n    dependencies {\r\n        compile 'com.github.fernandonogueira.okra:okra-spring:v0.1-alpha'\r\n    }\r\n```\r\n\r\n#### Maven\r\n```xml\r\n\t<dependency>\r\n\t    <groupId>com.github.fernandonogueira.okra</groupId>\r\n\t    <artifactId>okra-spring</artifactId>\r\n\t    <version>v0.1-alpha</version>\r\n\t</dependency>\r\n\r\n\t<repositories>\r\n\t\t<repository>\r\n\t\t    <id>jitpack.io</id>\r\n\t\t    <url>https://jitpack.io</url>\r\n\t\t</repository>\r\n\t</repositories>\r\n```\r\n\r\n### Quick start\r\n\r\nConfigure a scheduler\r\n```java\r\npublic class MyScheduler {\r\n    \r\n    private Okra okra;\r\n    ...\r\n    public void initScheduler() {\r\n        okra = new OkraSpringBuilder<DefaultOkraItem>()\r\n                        .withMongoTemplate(new MongoTemplate(client, \"schedulerBenchmark\"))\r\n                        .withDatabase(\"schedulerBenchmark\")\r\n                        .withSchedulerCollectionName(\"schedulerCollection\")\r\n                        .withExpiration(5, TimeUnit.MINUTES)\r\n                        .withScheduledItemClass(DefaultOkraItem.class)\r\n                        .validateAndBuild();        \r\n    }\r\n    ...    \r\n}\r\n```\r\n\r\nThen, use this scheduler to retrieve scheduled items...\r\n\r\n```java\r\npublic class MyScheduler {\r\n    \r\n    private Okra okra;\r\n    ...    \r\n    public void retrieveLoop() {\r\n        while (running) {\r\n            Optional<DefaultOkraItem> scheduledOpt = okra.poll();\r\n                if (scheduled.isPresent()) {\r\n                    doSomeWork(scheduledOpt.get());                \r\n                }    \r\n        }\r\n    }\r\n    ...    \r\n}\r\n```\r\n#### Build\r\n\r\nTo build:\r\n\r\n```bash\r\n$ git clone git@github.com:fernandonogueira/okra.git\r\n$ cd okra\r\n$ mvn install -DskipTests\r\n```\r\n[![Build Status](https://travis-ci.org/fernandonogueira/okra.svg?branch=master)](https://travis-ci.org/fernandonogueira/okra)\r\n\r\n### LICENSE\r\n```\r\nMIT License\r\n\r\nCopyright (c) 2016 Fernando Nogueira\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}